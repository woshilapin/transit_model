name: Continuous Integration
on: [push, pull_request]

env:
  PROJ_VERSION: 7.1.0

jobs:
  rustfmt:
    name: Formatting check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install Rust stable
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          profile: minimal
          components: rustfmt
    - name: Check formatting
      run: make format

  clippy:
    name: Analyzing code with Clippy
    runs-on: ubuntu-latest
    steps:
    - name: Install proj
      run: |
        wget --quiet --output-document - "https://kisiodigital.jfrog.io/kisiodigital/api/gpg/key/public" | sudo apt-key add -
        echo "deb [arch=amd64] https://kisiodigital.jfrog.io/kisiodigital/debian-local stretch main" | sudo tee /etc/apt/sources.list.d/kisio-digital.list
        sudo apt update
        sudo apt install --yes pkg-config libssl-dev clang libtiff-dev libcurl4-nss-dev proj=${PROJ_VERSION}
    - uses: actions/checkout@master
    - name: Install Rust stable
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          profile: minimal
          components: clippy
    - name: Linting
      run: make lint

  audit:
    name: Audits
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v1
    - name: Security audit
      uses: actions-rs/audit-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

  tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [stable, beta]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
          - build: beta
            os: ubuntu-latest
            rust: beta
    steps:
    - name: Install proj
      run: |
        wget --quiet --output-document - "https://kisiodigital.jfrog.io/kisiodigital/api/gpg/key/public" | sudo apt-key add -
        echo "deb [arch=amd64] https://kisiodigital.jfrog.io/kisiodigital/debian-local stretch main" | sudo tee /etc/apt/sources.list.d/kisio-digital.list
        sudo apt update
        sudo apt install --yes libxml2-utils pkg-config libssl-dev clang libtiff-dev libcurl4-nss-dev proj=${PROJ_VERSION}
    - uses: actions/checkout@master
    - name: Checkout Submodules
      uses: textbook/git-checkout-submodule-action@2.1.1
    - name: Install Rust ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
    - name: Run tests with and without features
      run: make test

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
    - name: Install proj
      run: |
        wget --quiet --output-document - "https://kisiodigital.jfrog.io/kisiodigital/api/gpg/key/public" | sudo apt-key add -
        echo "deb [arch=amd64] https://kisiodigital.jfrog.io/kisiodigital/debian-local stretch main" | sudo tee /etc/apt/sources.list.d/kisio-digital.list
        sudo apt update
        sudo apt install --yes libxml2-utils pkg-config libssl-dev clang proj=${PROJ_VERSION}
    - uses: actions/checkout@master
    - name: Checkout Submodules
      uses: textbook/git-checkout-submodule-action@2.1.1
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          profile: minimal
          override: true
    - name: Install `cargo-tarpaulin`
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-tarpaulin
    - name: Run tests for coverage
      uses: actions-rs/cargo@v1
      with:
        command: tarpaulin
        args: --all-features --workspace --count --out Lcov --run-types AllTargets
    - name: Codecov upload
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: lcov.info
